[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomaz Kastrun. Author, maintainer. Jinhwan Kim. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kastrun T (2023). datasetR: Functions creating random dataframe desired data types. R package version 0.2.2, https://github.com/tomaztk/datasetR.","code":"@Manual{,   title = {datasetR: Functions for creating a random dataframe with desired data types},   author = {Tomaz Kastrun},   year = {2023},   note = {R package version 0.2.2},   url = {https://github.com/tomaztk/datasetR}, }"},{"path":"/index.html","id":"datasetr-generating-random-dataset-for-r","dir":"","previous_headings":"","what":"Functions for creating a random dataframe with desired data types","title":"Functions for creating a random dataframe with desired data types","text":"datasetR helps generate random datasets R project. provides preset random list values different data types (interval, ordinal, nominal values). includes also function imputing NULL, NA missing values.","code":""},{"path":"/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Functions for creating a random dataframe with desired data types","text":"datasetR package can installed downloaded Github repository using devtools package. devtools package. Installing done using:","code":"library(devtools) install_github(\"tomaztk/datasetR\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Functions for creating a random dataframe with desired data types","text":"Comes prepacked main function dsR() help generate dataset. first, let’s create list 20 different variable types random values. get starting set values:","code":"library(datasetR) set_of_val <- set_of_val"},{"path":"/index.html","id":"data-types","dir":"","previous_headings":"","what":"Data Types","title":"Functions for creating a random dataframe with desired data types","text":"Understand predefined list values constructing datasets. Types explained: color continents imaginary ZIP codes capital cities clothing size classes 1 6 three-value scale expressing opinion five-value scale expressing opinion seven-value scale expressing opinion bo: boolean data; values TRUE FALSE character type values Yes integer type values 0 1 lowercase letters uppercase letters gu: alpha-numeric character string 16 bytes length, v4; known Globally unique identifier (GUID UUID) temperature (pref. °C) range -20 35 temperature (pref. °C) range 1 130 (integer type) mo: numeric data money specific unit.","code":""},{"path":"/index.html","id":"generating-your-random-dataset","dir":"","previous_headings":"Data Types","what":"Generating your random dataset","title":"Functions for creating a random dataframe with desired data types","text":"following example, code create dataframe 100 rows total 8 variables. 8 variables type: 1. 3 x multi-class (nominal multiple classes; characters numbers) 2. 4 x two-class (nominal two (binary) class ; characters numbers) 3. 1 x interval (integer) dimensions dataset 8 variables 100 rows sampled data.","code":"library(datasetR) library(dplyr)  my_dataset <- dsR(vr=\"ms:3;bi:4;ii:1\", nr=100);"},{"path":"/index.html","id":"generating-your-desired","dir":"","previous_headings":"Data Types","what":"Generating your desired","title":"Functions for creating a random dataframe with desired data types","text":"want create desired dataset, use vrparameter construct string values. string annotated type : number variables . stating multiple types, make sure separated semi-colon. following statements generate dataset dimension.","code":"test_data <- dsR(vr=\"od:1;ms:1;bi:1;ii:1\", nr=10); test_data <- dsR(vr=\"od:1;od:1\", nr=10); test_data <- dsR(vr=\"od:2\", nr=10);"},{"path":"/index.html","id":"adding-missing-values-to-your-dataset","dir":"","previous_headings":"Data Types","what":"Adding missing values to your dataset","title":"Functions for creating a random dataframe with desired data types","text":"want skew dataset, can add missing values desired data. using addMissingValues desired dataset desired column, values get replaced NA values. addition, parameter pc percent values given dataframe.column want replace.","code":"my_dataset$ii_1 <- addMissingValues(my_dataset, ii_1, pc = 10)"},{"path":"/index.html","id":"community-and-distribution","dir":"","previous_headings":"","what":"Community and distribution","title":"Functions for creating a random dataframe with desired data types","text":"welcome submit suggestions report bugs: https://github.com/tomaztk/datasetR/issues","code":""},{"path":"/reference/addMissingValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","title":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","text":"Function replacing values missing NA value given dataframe variable","code":""},{"path":"/reference/addMissingValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","text":"","code":"addMissingValues(df_name, col_name, pc = 10)"},{"path":"/reference/addMissingValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","text":"df_name Name dataframe col_name Name variable pct Percent missing values","code":""},{"path":"/reference/addMissingValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","text":"dataframe","code":""},{"path":"/reference/addMissingValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for replacing values with missing NA value for a given dataframe and variable — addMissingValues","text":"","code":"addMissingValues(df_name = df, col_name = var1, pc=20); #> Error in 1:nrow(df_name): argument of length 0"},{"path":"/reference/dsR.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating dataset with given random values for specified variables — dsR","title":"Function for creating dataset with given random values for specified variables — dsR","text":"Function creating dataset given random values specified variables","code":""},{"path":"/reference/dsR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating dataset with given random values for specified variables — dsR","text":"","code":"dsR(vr = \"ms:3;bi:4;ii:1\", nr = 100)"},{"path":"/reference/dsR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating dataset with given random values for specified variables — dsR","text":"vr Array variables types creating data frame. nr Number rows given dataframe!","code":""},{"path":"/reference/dsR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for creating dataset with given random values for specified variables — dsR","text":"dataframe","code":""},{"path":"/reference/dsR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for creating dataset with given random values for specified variables — dsR","text":"","code":"dsR(vr=\"ms:3;bi:4;ii:1\", nr=100); #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #>       ms_1   ms_2         ms_3 bi_1 bi_2 bi_3 bi_4 ii_1 #> 1    20123 102023        Tokyo    1    1   No    1  614 #> 2    54903   3502 Antananarivo    1    0   No    1  589 #> 3    20123   3502        Tokyo    1    1  Yes    1   17 #> 4   102023 102023    Ljubljana    1    1   No    0  562 #> 5     3502   3502    Ljubljana    1    0   No    0  199 #> 6     3502  54903      Seattle    0    0   No    1  731 #> 7    20123  20123       Taipeh    0    1   No    0  743 #> 8    54903 102023      Seattle    0    1  Yes    0  953 #> 9   102023  20123 Antananarivo    1    1  Yes    0  158 #> 10  102023  20123       Taipeh    1    0  Yes    0  392 #> 11   54903  54903    Ljubljana    1    0   No    1  156 #> 12  102023 102023     Windhoek    1    0   No    0  975 #> 13    1000   1000      Seattle    1    1   No    0  529 #> 14    1000  20123       Taipeh    0    1  Yes    1  159 #> 15   20123   1000    Ljubljana    0    1  Yes    1   77 #> 16   54903  20123      Seattle    0    0   No    0  581 #> 17   20123  54903       Taipeh    0    1  Yes    1  760 #> 18    3502 102023 Antananarivo    1    0   No    1  452 #> 19  102023   1000     Asuncion    0    0  Yes    1  171 #> 20   20123   1000     Asuncion    1    0   No    0   31 #> 21   20123  54903    Ljubljana    0    0   No    1  915 #> 22    3502  54903       Taipeh    0    1  Yes    0  756 #> 23  102023 102023 Antananarivo    0    0   No    0  803 #> 24  102023  54903 Antananarivo    1    0  Yes    1  262 #> 25    1000   1000 Antananarivo    1    1   No    1  472 #> 26    1000  20123       Taipeh    1    0   No    0  690 #> 27  102023 102023     Windhoek    0    0   No    0  633 #> 28   20123  20123      Seattle    0    1   No    1  976 #> 29    3502 102023        Tokyo    0    1   No    0  338 #> 30   54903   1000       Taipeh    0    0  Yes    0  280 #> 31    1000 102023    Ljubljana    1    1   No    1  383 #> 32  102023   1000     Asuncion    1    1  Yes    0  391 #> 33    3502   3502     Windhoek    1    0   No    0  451 #> 34  102023   1000     Windhoek    1    0   No    1  388 #> 35    1000  54903       Taipeh    0    0   No    0  660 #> 36    1000  20123     Windhoek    0    1   No    0  907 #> 37   54903   1000       Taipeh    1    0   No    0  390 #> 38    1000  20123     Windhoek    0    1   No    1  871 #> 39   54903  54903     Canberra    0    0   No    0  589 #> 40   20123   3502 Antananarivo    1    1  Yes    0  274 #> 41  102023  20123 Antananarivo    0    1   No    0  889 #> 42    3502 102023 Antananarivo    1    1  Yes    0  370 #> 43    3502  54903       Taipeh    1    0   No    1  255 #> 44    3502  54903     Windhoek    0    0  Yes    1  953 #> 45  102023  54903     Asuncion    1    1   No    1  724 #> 46   54903  54903     Canberra    1    1   No    1  214 #> 47    1000  54903       Taipeh    1    0  Yes    1  966 #> 48    3502 102023       Taipeh    0    1  Yes    1  154 #> 49  102023  54903     Asuncion    1    1   No    0   75 #> 50  102023  54903      Seattle    1    1  Yes    0  684 #> 51   54903 102023     Asuncion    0    1  Yes    1  390 #> 52   54903  54903     Windhoek    0    0   No    1  248 #> 53   54903 102023        Tokyo    0    0   No    0  583 #> 54   54903 102023       Taipeh    0    1   No    0  483 #> 55   20123  20123 Antananarivo    1    1   No    0  444 #> 56    3502 102023 Antananarivo    1    1  Yes    1  328 #> 57    1000  54903      Seattle    1    1  Yes    1  932 #> 58    1000 102023     Asuncion    1    1   No    0  950 #> 59    1000 102023    Ljubljana    0    1  Yes    0  328 #> 60   54903  54903     Asuncion    0    1  Yes    0   71 #> 61   54903   1000    Ljubljana    1    1  Yes    0   19 #> 62    1000   3502    Ljubljana    0    0   No    0  483 #> 63  102023   1000    Ljubljana    0    1  Yes    0  906 #> 64  102023   3502        Tokyo    1    1   No    1  271 #> 65    1000 102023    Ljubljana    1    1   No    0  508 #> 66   54903 102023       Taipeh    1    0  Yes    0  604 #> 67   20123  54903    Ljubljana    1    0  Yes    1  903 #> 68   54903   1000 Antananarivo    0    0   No    1  948 #> 69    1000  20123     Asuncion    1    0   No    1  836 #> 70  102023  20123       Taipeh    1    1  Yes    1  517 #> 71   20123   1000      Seattle    0    0   No    0  603 #> 72   54903   1000        Tokyo    1    1  Yes    1  627 #> 73  102023  54903     Asuncion    1    0  Yes    1  593 #> 74  102023   1000     Asuncion    1    1  Yes    1  355 #> 75    1000   1000    Ljubljana    1    0  Yes    1  397 #> 76   54903   1000 Antananarivo    0    0   No    1  393 #> 77  102023 102023     Windhoek    0    0   No    1  700 #> 78    1000  20123        Tokyo    0    0   No    1  186 #> 79  102023 102023        Tokyo    1    0   No    0  140 #> 80    1000  20123     Canberra    0    0  Yes    1  649 #> 81   20123  20123     Asuncion    1    1   No    1  743 #> 82  102023 102023        Tokyo    0    0   No    1   21 #> 83   54903  54903    Ljubljana    1    1  Yes    1  660 #> 84  102023  20123     Asuncion    1    1  Yes    1  740 #> 85    3502  20123 Antananarivo    0    1   No    0  894 #> 86   54903 102023     Windhoek    1    1   No    0  904 #> 87    3502   3502     Asuncion    0    0  Yes    1  900 #> 88   20123   1000        Tokyo    1    1  Yes    0  237 #> 89    3502 102023        Tokyo    1    0   No    0  648 #> 90    1000  20123 Antananarivo    0    0  Yes    1  182 #> 91  102023  20123 Antananarivo    0    1  Yes    1  531 #> 92    1000 102023     Windhoek    1    1   No    1  198 #> 93   54903  54903 Antananarivo    0    0   No    0  597 #> 94   54903 102023     Asuncion    0    1  Yes    0  799 #> 95  102023  54903     Windhoek    0    0   No    0  763 #> 96   20123   1000 Antananarivo    0    0  Yes    1  102 #> 97   20123   3502    Ljubljana    0    0   No    0  432 #> 98    3502   1000     Canberra    0    1   No    0  643 #> 99    3502  20123       Taipeh    1    1   No    0  435 #> 100  20123   1000       Taipeh    1    1  Yes    0  204"},{"path":"/reference/getType.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating the datasetR dataframe — getType","title":"Creating the datasetR dataframe — getType","text":"Get type variable vector given position","code":""},{"path":"/reference/getType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating the datasetR dataframe — getType","text":"","code":"getType(var_enum_enter = 1)"},{"path":"/reference/getType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating the datasetR dataframe — getType","text":"var_enum_enter value enumerator given vector values","code":""},{"path":"/reference/getType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating the datasetR dataframe — getType","text":"data type given variable","code":""},{"path":"/reference/getType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating the datasetR dataframe — getType","text":"","code":"getType(1); #> [1] \"chr\" getType(3); #> [1] \"num\""},{"path":"/reference/getValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the starting set of values for constructing the dataframe — getValues","title":"Get the starting set of values for constructing the dataframe — getValues","text":"Get starting set values constructing dataframe","code":""},{"path":"/reference/getValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the starting set of values for constructing the dataframe — getValues","text":"","code":"getValues()"},{"path":"/reference/getValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the starting set of values for constructing the dataframe — getValues","text":"function returns data frame.","code":""},{"path":"/reference/getValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the starting set of values for constructing the dataframe — getValues","text":"","code":"getValues()"},{"path":"/reference/get_uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating GUID for test data — get_uuid","title":"Creating GUID for test data — get_uuid","text":"Get guid creating sample dataset","code":""},{"path":"/reference/get_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating GUID for test data — get_uuid","text":"","code":"get_uuid()"},{"path":"/reference/get_uuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating GUID for test data — get_uuid","text":"data type guid","code":""},{"path":"/reference/get_uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating GUID for test data — get_uuid","text":"","code":"get_uuid(); #> [1] \"91c1d7b9-bf74-4098-8b34-0cadfc1aa7ed\""},{"path":"/reference/set_of_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data — set_of_val","title":"Sample data — set_of_val","text":"Sample data","code":""},{"path":"/reference/set_of_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data — set_of_val","text":"","code":"set_of_val"},{"path":"/reference/set_of_val.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data — set_of_val","text":"object class list length 20.","code":""},{"path":"/reference/set_of_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample data — set_of_val","text":"","code":"dsR(vr=\"ms:3;bi:4;ii:1\", nr=100); #>           ms_1         ms_2       ms_3 bi_1 bi_2 bi_3 bi_4  ii_1 #> 1         Asia     Windhoek Antarctica    0    0   No    1 18237 #> 2   Antarctica      Seattle     Africa    1    1  Yes    1 12206 #> 3    Australia     Asuncion    America    1    1  Yes    1 17667 #> 4    Australia Antananarivo     Africa    0    0  Yes    1 10997 #> 5   Antarctica       Taipeh Antarctica    0    1   No    0 11731 #> 6       Africa Antananarivo    America    0    0  Yes    1 16515 #> 7       Africa        Tokyo    America    1    1   No    1 16450 #> 8    Australia Antananarivo     Europe    0    0   No    0 10932 #> 9    Australia      Seattle  Australia    1    1   No    0  9267 #> 10   Australia Antananarivo    America    1    1   No    1 17411 #> 11        Asia        Tokyo  Australia    0    0   No    1 12959 #> 12      Africa     Canberra     Europe    0    1  Yes    0 19216 #> 13      Africa    Ljubljana  Australia    0    0  Yes    0 11007 #> 14        Asia      Seattle     Europe    1    0  Yes    1 19929 #> 15  Antarctica    Ljubljana Antarctica    0    1  Yes    0 13610 #> 16      Europe       Taipeh    America    1    1  Yes    1  9843 #> 17     America     Canberra       Asia    1    0  Yes    0 17059 #> 18        Asia     Canberra     Africa    1    0   No    0 10817 #> 19  Antarctica     Canberra  Australia    1    1   No    0 18076 #> 20      Europe Antananarivo    America    1    1  Yes    1 13482 #> 21  Antarctica     Canberra    America    0    1   No    0 16821 #> 22      Europe     Canberra  Australia    1    1   No    0 12786 #> 23     America       Taipeh    America    0    1   No    0 11427 #> 24     America     Windhoek     Europe    0    1   No    0 12731 #> 25  Antarctica     Asuncion     Africa    1    1   No    0 10197 #> 26  Antarctica Antananarivo  Australia    1    1   No    0 13724 #> 27     America      Seattle     Africa    0    1  Yes    0 15935 #> 28      Europe        Tokyo  Australia    1    0  Yes    1 11353 #> 29     America     Windhoek     Europe    0    1   No    0 13764 #> 30        Asia      Seattle  Australia    0    0  Yes    0 18360 #> 31      Africa     Canberra       Asia    1    0  Yes    1 11857 #> 32      Africa      Seattle Antarctica    0    0  Yes    0 10120 #> 33  Antarctica       Taipeh    America    1    0  Yes    0 10873 #> 34   Australia     Asuncion       Asia    1    1  Yes    0  9782 #> 35  Antarctica Antananarivo  Australia    1    1   No    0 17532 #> 36      Europe     Canberra     Europe    1    1   No    0 17162 #> 37   Australia    Ljubljana       Asia    0    1   No    1 19026 #> 38  Antarctica     Canberra       Asia    1    1   No    0 12289 #> 39      Europe      Seattle     Europe    1    1  Yes    1 14704 #> 40  Antarctica     Canberra    America    0    1   No    0  9149 #> 41   Australia     Windhoek Antarctica    1    1  Yes    1 11662 #> 42  Antarctica     Asuncion    America    1    1   No    0 11995 #> 43     America     Windhoek    America    0    1   No    1 11720 #> 44  Antarctica    Ljubljana     Europe    0    0   No    0 17347 #> 45        Asia     Windhoek       Asia    1    1   No    0 10369 #> 46      Europe        Tokyo Antarctica    1    1  Yes    1  9039 #> 47        Asia    Ljubljana  Australia    1    0   No    1 18016 #> 48   Australia        Tokyo       Asia    0    1  Yes    1 11137 #> 49      Africa      Seattle    America    0    0   No    0 10930 #> 50      Africa     Windhoek Antarctica    0    0   No    0 12232 #> 51     America Antananarivo     Africa    0    1   No    1 17595 #> 52      Europe       Taipeh  Australia    0    0  Yes    0 18683 #> 53   Australia     Windhoek    America    1    0   No    0 10673 #> 54      Europe        Tokyo  Australia    1    1  Yes    1 11944 #> 55      Africa    Ljubljana  Australia    0    0   No    0 19064 #> 56      Europe     Asuncion       Asia    0    0   No    1 15092 #> 57  Antarctica Antananarivo    America    0    0   No    0 19975 #> 58  Antarctica Antananarivo     Europe    0    1   No    1 18670 #> 59        Asia     Windhoek       Asia    0    0   No    1 15635 #> 60  Antarctica     Canberra Antarctica    0    1  Yes    0 15898 #> 61      Africa     Windhoek       Asia    1    1  Yes    1 12800 #> 62  Antarctica       Taipeh     Europe    1    1  Yes    1 18476 #> 63      Europe     Windhoek    America    1    0  Yes    1 15366 #> 64  Antarctica      Seattle     Africa    1    1   No    1  9911 #> 65  Antarctica       Taipeh       Asia    1    1  Yes    1 10779 #> 66  Antarctica Antananarivo Antarctica    0    0   No    0 15291 #> 67        Asia     Asuncion       Asia    1    0  Yes    1 15942 #> 68  Antarctica    Ljubljana  Australia    0    1   No    1 11761 #> 69        Asia      Seattle Antarctica    1    0  Yes    0 18263 #> 70  Antarctica       Taipeh Antarctica    0    1  Yes    1 13135 #> 71        Asia     Canberra       Asia    0    1   No    0 16689 #> 72     America       Taipeh     Europe    1    0  Yes    0 17302 #> 73      Europe       Taipeh  Australia    1    0   No    0 19341 #> 74      Africa      Seattle     Europe    1    0  Yes    0 18311 #> 75  Antarctica       Taipeh       Asia    1    0  Yes    1 10628 #> 76   Australia        Tokyo     Europe    0    1   No    1 13783 #> 77        Asia     Windhoek     Europe    0    0   No    0 12207 #> 78     America     Canberra       Asia    0    0   No    0 10256 #> 79  Antarctica     Asuncion     Africa    1    0  Yes    0 10972 #> 80  Antarctica        Tokyo     Europe    1    0   No    1 15544 #> 81   Australia     Canberra Antarctica    0    0  Yes    1 11260 #> 82   Australia      Seattle     Africa    1    1   No    1 19355 #> 83      Europe        Tokyo  Australia    0    1  Yes    0 10647 #> 84   Australia     Asuncion       Asia    1    1  Yes    0 10280 #> 85      Africa Antananarivo  Australia    1    0  Yes    1 12568 #> 86     America        Tokyo Antarctica    1    0  Yes    1 15705 #> 87     America        Tokyo    America    0    0   No    0 16358 #> 88   Australia     Windhoek       Asia    1    0   No    0 15259 #> 89     America     Canberra  Australia    0    1   No    0 18385 #> 90        Asia Antananarivo    America    1    1   No    1 13541 #> 91     America     Windhoek    America    0    1  Yes    0 19885 #> 92        Asia       Taipeh     Europe    0    0   No    1 18737 #> 93      Africa    Ljubljana  Australia    1    0   No    0 10197 #> 94     America      Seattle     Africa    1    1  Yes    0 14499 #> 95   Australia     Canberra       Asia    1    0  Yes    0 13816 #> 96      Africa       Taipeh Antarctica    0    1   No    1 19014 #> 97      Africa     Asuncion    America    0    1   No    0 14993 #> 98      Europe    Ljubljana    America    1    1  Yes    0 17337 #> 99     America     Windhoek     Europe    0    1   No    0 12926 #> 100       Asia       Taipeh       Asia    1    1   No    1  9777"}]
